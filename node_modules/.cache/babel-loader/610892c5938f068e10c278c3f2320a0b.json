{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\VocaBoost\\\\src\\\\components\\\\CEFRLevelTest.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Paper, Button, CircularProgress } from '@mui/material';\nimport styled from 'styled-components';\nconst PassageContainer = styled.div`\n  margin: 20px 0;\n  padding: 20px;\n  background-color: #f8f9fa;\n  border-radius: 8px;\n`;\nconst Word = styled.span`\n  cursor: pointer;\n  padding: 2px 4px;\n  border-radius: 4px;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #e3f2fd;\n  }\n\n  &.selected {\n    background-color: #bbdefb;\n    text-decoration: underline;\n  }\n`;\nconst CEFRLevelTest = ({\n  selectedTopic,\n  onLevelDetermined,\n  onWordSelected\n}) => {\n  const [currentLevel, setCurrentLevel] = useState('B1'); // 중간 레벨로 시작\n  const [passage, setPassage] = useState('');\n  const [wordCount, setWordCount] = useState(0);\n  const [selectedWords, setSelectedWords] = useState(new Set());\n  const [isLoading, setIsLoading] = useState(true);\n\n  // CEFR 레벨별 샘플 텍스트 (실제로는 API에서 가져와야 함)\n  const getSamplePassages = topic => {\n    const passages = {\n      '스포츠': {\n        B1: \"Baseball is a strategic team sport that requires skill and coordination. Players must master various positions and techniques. The pitcher's role is crucial in controlling the game's pace. Batters need quick reflexes and good hand-eye coordination. Fielders must work together to prevent the opposing team from scoring. Baseball games often involve complex strategies and quick decision-making. Fans enjoy the excitement of close games and dramatic moments. Professional players train extensively to maintain peak performance. Baseball has a rich history and cultural significance in many countries. The sport continues to evolve with new training methods and technologies.\"\n      },\n      '음악': {\n        B1: \"Music is a powerful form of artistic expression that connects people across cultures. Different genres of music reflect various cultural traditions and historical periods. Musicians spend years mastering their instruments and developing their skills. Music can evoke strong emotions and create lasting memories. The music industry has evolved significantly with digital technology. Live performances provide unique experiences for both artists and audiences. Music education plays an important role in cognitive development. Many people find comfort and inspiration in music during difficult times. The creation of music involves both technical skill and creative expression. Music continues to evolve with new technologies and cultural influences.\"\n      }\n      // 다른 토픽들도 추가 가능\n    };\n    return passages[topic.main] || passages['스포츠']; // 기본값으로 스포츠 텍스트 사용\n  };\n  useEffect(() => {\n    // 실제 구현에서는 API를 통해 선택된 토픽에 맞는 텍스트를 가져와야 함\n    const fetchPassage = async () => {\n      setIsLoading(true);\n      // API 호출 시뮬레이션\n      setTimeout(() => {\n        const passages = getSamplePassages(selectedTopic);\n        setPassage(passages[currentLevel]);\n        setWordCount(passages[currentLevel].split(/\\s+/).length);\n        setIsLoading(false);\n      }, 1000);\n    };\n    fetchPassage();\n  }, [currentLevel, selectedTopic]);\n  const handleWordClick = word => {\n    const newSelectedWords = new Set(selectedWords);\n    if (newSelectedWords.has(word)) {\n      newSelectedWords.delete(word);\n    } else {\n      newSelectedWords.add(word);\n    }\n    setSelectedWords(newSelectedWords);\n  };\n  const handleSubmit = () => {\n    const unknownWordPercentage = selectedWords.size / wordCount * 100;\n    if (unknownWordPercentage > 10) {\n      // 더 쉬운 레벨로 이동\n      const levels = ['A1', 'A2', 'B1', 'B2', 'C1', 'C2'];\n      const currentIndex = levels.indexOf(currentLevel);\n      if (currentIndex > 0) {\n        setCurrentLevel(levels[currentIndex - 1]);\n        setSelectedWords(new Set());\n      } else {\n        // A1에서도 10% 이상이면 A1로 결정\n        onLevelDetermined(currentLevel);\n        onWordSelected(selectedWords);\n      }\n    } else if (unknownWordPercentage < 5) {\n      // 더 어려운 레벨로 이동\n      const levels = ['A1', 'A2', 'B1', 'B2', 'C1', 'C2'];\n      const currentIndex = levels.indexOf(currentLevel);\n      if (currentIndex < levels.length - 1) {\n        setCurrentLevel(levels[currentIndex + 1]);\n        setSelectedWords(new Set());\n      } else {\n        // C2에서도 5% 미만이면 C2로 결정\n        onLevelDetermined(currentLevel);\n        onWordSelected(selectedWords);\n      }\n    } else {\n      // 적정 레벨 찾음 (5-10% 사이)\n      onLevelDetermined(currentLevel);\n      onWordSelected(selectedWords);\n    }\n  };\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      maxWidth: 800,\n      mx: 'auto',\n      p: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, \"CEFR \\uB808\\uBCA8 \\uD14C\\uC2A4\\uD2B8\"), /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    sx: {\n      p: 3,\n      mb: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \"\\uD604\\uC7AC \\uD14C\\uC2A4\\uD2B8 \\uB808\\uBCA8: \", currentLevel), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"text.secondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, \"\\uBAA8\\uB974\\uB294 \\uB2E8\\uC5B4\\uB97C \\uD074\\uB9AD\\uD558\\uC138\\uC694. \\uC804\\uCCB4 \\uB2E8\\uC5B4\\uC758 5-10%\\uAC00 \\uC801\\uC815 \\uC218\\uC900\\uC785\\uB2C8\\uB2E4.\")), isLoading ? /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: 'flex',\n      justifyContent: 'center',\n      my: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PassageContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, passage.split(/\\s+/).map((word, index) => /*#__PURE__*/React.createElement(Word, {\n    key: index,\n    className: selectedWords.has(word) ? 'selected' : '',\n    onClick: () => handleWordClick(word),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, word, ' '))), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      mt: 3,\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"text.secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, \"\\uC120\\uD0DD\\uD55C \\uB2E8\\uC5B4: \", selectedWords.size, \" / \\uC804\\uCCB4 \\uB2E8\\uC5B4: \", wordCount), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSubmit,\n    disabled: selectedWords.size === 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, \"\\uB2E4\\uC74C \\uB2E8\\uACC4\"))));\n};\nexport default CEFRLevelTest;","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Paper","Button","CircularProgress","styled","PassageContainer","div","Word","span","CEFRLevelTest","selectedTopic","onLevelDetermined","onWordSelected","currentLevel","setCurrentLevel","passage","setPassage","wordCount","setWordCount","selectedWords","setSelectedWords","Set","isLoading","setIsLoading","getSamplePassages","topic","passages","B1","main","fetchPassage","setTimeout","split","length","handleWordClick","word","newSelectedWords","has","delete","add","handleSubmit","unknownWordPercentage","size","levels","currentIndex","indexOf","createElement","sx","maxWidth","mx","p","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","elevation","mb","color","display","justifyContent","my","Fragment","map","index","key","className","onClick","mt","alignItems","disabled"],"sources":["C:/Users/user/VocaBoost/src/components/CEFRLevelTest.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Typography, Paper, Button, CircularProgress } from '@mui/material';\r\nimport styled from 'styled-components';\r\n\r\nconst PassageContainer = styled.div`\r\n  margin: 20px 0;\r\n  padding: 20px;\r\n  background-color: #f8f9fa;\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst Word = styled.span`\r\n  cursor: pointer;\r\n  padding: 2px 4px;\r\n  border-radius: 4px;\r\n  transition: background-color 0.3s ease;\r\n\r\n  &:hover {\r\n    background-color: #e3f2fd;\r\n  }\r\n\r\n  &.selected {\r\n    background-color: #bbdefb;\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nconst CEFRLevelTest = ({ selectedTopic, onLevelDetermined, onWordSelected }) => {\r\n  const [currentLevel, setCurrentLevel] = useState('B1'); // 중간 레벨로 시작\r\n  const [passage, setPassage] = useState('');\r\n  const [wordCount, setWordCount] = useState(0);\r\n  const [selectedWords, setSelectedWords] = useState(new Set());\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // CEFR 레벨별 샘플 텍스트 (실제로는 API에서 가져와야 함)\r\n  const getSamplePassages = (topic) => {\r\n    const passages = {\r\n      '스포츠': {\r\n        B1: \"Baseball is a strategic team sport that requires skill and coordination. Players must master various positions and techniques. The pitcher's role is crucial in controlling the game's pace. Batters need quick reflexes and good hand-eye coordination. Fielders must work together to prevent the opposing team from scoring. Baseball games often involve complex strategies and quick decision-making. Fans enjoy the excitement of close games and dramatic moments. Professional players train extensively to maintain peak performance. Baseball has a rich history and cultural significance in many countries. The sport continues to evolve with new training methods and technologies.\"\r\n      },\r\n      '음악': {\r\n        B1: \"Music is a powerful form of artistic expression that connects people across cultures. Different genres of music reflect various cultural traditions and historical periods. Musicians spend years mastering their instruments and developing their skills. Music can evoke strong emotions and create lasting memories. The music industry has evolved significantly with digital technology. Live performances provide unique experiences for both artists and audiences. Music education plays an important role in cognitive development. Many people find comfort and inspiration in music during difficult times. The creation of music involves both technical skill and creative expression. Music continues to evolve with new technologies and cultural influences.\"\r\n      }\r\n      // 다른 토픽들도 추가 가능\r\n    };\r\n\r\n    return passages[topic.main] || passages['스포츠']; // 기본값으로 스포츠 텍스트 사용\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 실제 구현에서는 API를 통해 선택된 토픽에 맞는 텍스트를 가져와야 함\r\n    const fetchPassage = async () => {\r\n      setIsLoading(true);\r\n      // API 호출 시뮬레이션\r\n      setTimeout(() => {\r\n        const passages = getSamplePassages(selectedTopic);\r\n        setPassage(passages[currentLevel]);\r\n        setWordCount(passages[currentLevel].split(/\\s+/).length);\r\n        setIsLoading(false);\r\n      }, 1000);\r\n    };\r\n\r\n    fetchPassage();\r\n  }, [currentLevel, selectedTopic]);\r\n\r\n  const handleWordClick = (word) => {\r\n    const newSelectedWords = new Set(selectedWords);\r\n    if (newSelectedWords.has(word)) {\r\n      newSelectedWords.delete(word);\r\n    } else {\r\n      newSelectedWords.add(word);\r\n    }\r\n    setSelectedWords(newSelectedWords);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const unknownWordPercentage = (selectedWords.size / wordCount) * 100;\r\n    \r\n    if (unknownWordPercentage > 10) {\r\n      // 더 쉬운 레벨로 이동\r\n      const levels = ['A1', 'A2', 'B1', 'B2', 'C1', 'C2'];\r\n      const currentIndex = levels.indexOf(currentLevel);\r\n      if (currentIndex > 0) {\r\n        setCurrentLevel(levels[currentIndex - 1]);\r\n        setSelectedWords(new Set());\r\n      } else {\r\n        // A1에서도 10% 이상이면 A1로 결정\r\n        onLevelDetermined(currentLevel);\r\n        onWordSelected(selectedWords);\r\n      }\r\n    } else if (unknownWordPercentage < 5) {\r\n      // 더 어려운 레벨로 이동\r\n      const levels = ['A1', 'A2', 'B1', 'B2', 'C1', 'C2'];\r\n      const currentIndex = levels.indexOf(currentLevel);\r\n      if (currentIndex < levels.length - 1) {\r\n        setCurrentLevel(levels[currentIndex + 1]);\r\n        setSelectedWords(new Set());\r\n      } else {\r\n        // C2에서도 5% 미만이면 C2로 결정\r\n        onLevelDetermined(currentLevel);\r\n        onWordSelected(selectedWords);\r\n      }\r\n    } else {\r\n      // 적정 레벨 찾음 (5-10% 사이)\r\n      onLevelDetermined(currentLevel);\r\n      onWordSelected(selectedWords);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 800, mx: 'auto', p: 3 }}>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        CEFR 레벨 테스트\r\n      </Typography>\r\n\r\n      <Paper elevation={3} sx={{ p: 3, mb: 3 }}>\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          현재 테스트 레벨: {currentLevel}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n          모르는 단어를 클릭하세요. 전체 단어의 5-10%가 적정 수준입니다.\r\n        </Typography>\r\n      </Paper>\r\n\r\n      {isLoading ? (\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\r\n          <CircularProgress />\r\n        </Box>\r\n      ) : (\r\n        <>\r\n          <PassageContainer>\r\n            {passage.split(/\\s+/).map((word, index) => (\r\n              <Word\r\n                key={index}\r\n                className={selectedWords.has(word) ? 'selected' : ''}\r\n                onClick={() => handleWordClick(word)}\r\n              >\r\n                {word}{' '}\r\n              </Word>\r\n            ))}\r\n          </PassageContainer>\r\n\r\n          <Box sx={{ mt: 3, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              선택한 단어: {selectedWords.size} / 전체 단어: {wordCount}\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleSubmit}\r\n              disabled={selectedWords.size === 0}\r\n            >\r\n              다음 단계\r\n            </Button>\r\n          </Box>\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CEFRLevelTest; "],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,UAAU,EAAEC,KAAK,EAAEC,MAAM,EAAEC,gBAAgB,QAAQ,eAAe;AAChF,OAAOC,MAAM,MAAM,mBAAmB;AAEtC,MAAMC,gBAAgB,GAAGD,MAAM,CAACE,GAAG;AACnC;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,IAAI,GAAGH,MAAM,CAACI,IAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,aAAa,GAAGA,CAAC;EAAEC,aAAa;EAAEC,iBAAiB;EAAEC;AAAe,CAAC,KAAK;EAC9E,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxD,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACsB,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAAC,IAAIwB,GAAG,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACA,MAAM2B,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,QAAQ,GAAG;MACf,KAAK,EAAE;QACLC,EAAE,EAAE;MACN,CAAC;MACD,IAAI,EAAE;QACJA,EAAE,EAAE;MACN;MACA;IACF,CAAC;IAED,OAAOD,QAAQ,CAACD,KAAK,CAACG,IAAI,CAAC,IAAIF,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAClD,CAAC;EAED5B,SAAS,CAAC,MAAM;IACd;IACA,MAAM+B,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/BN,YAAY,CAAC,IAAI,CAAC;MAClB;MACAO,UAAU,CAAC,MAAM;QACf,MAAMJ,QAAQ,GAAGF,iBAAiB,CAACd,aAAa,CAAC;QACjDM,UAAU,CAACU,QAAQ,CAACb,YAAY,CAAC,CAAC;QAClCK,YAAY,CAACQ,QAAQ,CAACb,YAAY,CAAC,CAACkB,KAAK,CAAC,KAAK,CAAC,CAACC,MAAM,CAAC;QACxDT,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;IAEDM,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAAChB,YAAY,EAAEH,aAAa,CAAC,CAAC;EAEjC,MAAMuB,eAAe,GAAIC,IAAI,IAAK;IAChC,MAAMC,gBAAgB,GAAG,IAAId,GAAG,CAACF,aAAa,CAAC;IAC/C,IAAIgB,gBAAgB,CAACC,GAAG,CAACF,IAAI,CAAC,EAAE;MAC9BC,gBAAgB,CAACE,MAAM,CAACH,IAAI,CAAC;IAC/B,CAAC,MAAM;MACLC,gBAAgB,CAACG,GAAG,CAACJ,IAAI,CAAC;IAC5B;IACAd,gBAAgB,CAACe,gBAAgB,CAAC;EACpC,CAAC;EAED,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,qBAAqB,GAAIrB,aAAa,CAACsB,IAAI,GAAGxB,SAAS,GAAI,GAAG;IAEpE,IAAIuB,qBAAqB,GAAG,EAAE,EAAE;MAC9B;MACA,MAAME,MAAM,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;MACnD,MAAMC,YAAY,GAAGD,MAAM,CAACE,OAAO,CAAC/B,YAAY,CAAC;MACjD,IAAI8B,YAAY,GAAG,CAAC,EAAE;QACpB7B,eAAe,CAAC4B,MAAM,CAACC,YAAY,GAAG,CAAC,CAAC,CAAC;QACzCvB,gBAAgB,CAAC,IAAIC,GAAG,CAAC,CAAC,CAAC;MAC7B,CAAC,MAAM;QACL;QACAV,iBAAiB,CAACE,YAAY,CAAC;QAC/BD,cAAc,CAACO,aAAa,CAAC;MAC/B;IACF,CAAC,MAAM,IAAIqB,qBAAqB,GAAG,CAAC,EAAE;MACpC;MACA,MAAME,MAAM,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;MACnD,MAAMC,YAAY,GAAGD,MAAM,CAACE,OAAO,CAAC/B,YAAY,CAAC;MACjD,IAAI8B,YAAY,GAAGD,MAAM,CAACV,MAAM,GAAG,CAAC,EAAE;QACpClB,eAAe,CAAC4B,MAAM,CAACC,YAAY,GAAG,CAAC,CAAC,CAAC;QACzCvB,gBAAgB,CAAC,IAAIC,GAAG,CAAC,CAAC,CAAC;MAC7B,CAAC,MAAM;QACL;QACAV,iBAAiB,CAACE,YAAY,CAAC;QAC/BD,cAAc,CAACO,aAAa,CAAC;MAC/B;IACF,CAAC,MAAM;MACL;MACAR,iBAAiB,CAACE,YAAY,CAAC;MAC/BD,cAAc,CAACO,aAAa,CAAC;IAC/B;EACF,CAAC;EAED,oBACEvB,KAAA,CAAAiD,aAAA,CAAC9C,GAAG;IAAC+C,EAAE,EAAE;MAAEC,QAAQ,EAAE,GAAG;MAAEC,EAAE,EAAE,MAAM;MAAEC,CAAC,EAAE;IAAE,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3C3D,KAAA,CAAAiD,aAAA,CAAC7C,UAAU;IAACwD,OAAO,EAAC,IAAI;IAACC,YAAY;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,sCAE1B,CAAC,eAEb3D,KAAA,CAAAiD,aAAA,CAAC5C,KAAK;IAACyD,SAAS,EAAE,CAAE;IAACZ,EAAE,EAAE;MAAEG,CAAC,EAAE,CAAC;MAAEU,EAAE,EAAE;IAAE,CAAE;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvC3D,KAAA,CAAAiD,aAAA,CAAC7C,UAAU;IAACwD,OAAO,EAAC,WAAW;IAACC,YAAY;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,gDAChC,EAAC1C,YACF,CAAC,eACbjB,KAAA,CAAAiD,aAAA,CAAC7C,UAAU;IAACwD,OAAO,EAAC,OAAO;IAACI,KAAK,EAAC,gBAAgB;IAACH,YAAY;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,gKAEpD,CACP,CAAC,EAEPjC,SAAS,gBACR1B,KAAA,CAAAiD,aAAA,CAAC9C,GAAG;IAAC+C,EAAE,EAAE;MAAEe,OAAO,EAAE,MAAM;MAAEC,cAAc,EAAE,QAAQ;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5D3D,KAAA,CAAAiD,aAAA,CAAC1C,gBAAgB;IAAA+C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAChB,CAAC,gBAEN3D,KAAA,CAAAiD,aAAA,CAAAjD,KAAA,CAAAoE,QAAA,qBACEpE,KAAA,CAAAiD,aAAA,CAACxC,gBAAgB;IAAA6C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACdxC,OAAO,CAACgB,KAAK,CAAC,KAAK,CAAC,CAACkC,GAAG,CAAC,CAAC/B,IAAI,EAAEgC,KAAK,kBACpCtE,KAAA,CAAAiD,aAAA,CAACtC,IAAI;IACH4D,GAAG,EAAED,KAAM;IACXE,SAAS,EAAEjD,aAAa,CAACiB,GAAG,CAACF,IAAI,CAAC,GAAG,UAAU,GAAG,EAAG;IACrDmC,OAAO,EAAEA,CAAA,KAAMpC,eAAe,CAACC,IAAI,CAAE;IAAAgB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEpCrB,IAAI,EAAE,GACH,CACP,CACe,CAAC,eAEnBtC,KAAA,CAAAiD,aAAA,CAAC9C,GAAG;IAAC+C,EAAE,EAAE;MAAEwB,EAAE,EAAE,CAAC;MAAET,OAAO,EAAE,MAAM;MAAEC,cAAc,EAAE,eAAe;MAAES,UAAU,EAAE;IAAS,CAAE;IAAArB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzF3D,KAAA,CAAAiD,aAAA,CAAC7C,UAAU;IAACwD,OAAO,EAAC,OAAO;IAACI,KAAK,EAAC,gBAAgB;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,mCACzC,EAACpC,aAAa,CAACsB,IAAI,EAAC,gCAAU,EAACxB,SAC7B,CAAC,eACbrB,KAAA,CAAAiD,aAAA,CAAC3C,MAAM;IACLsD,OAAO,EAAC,WAAW;IACnBI,KAAK,EAAC,SAAS;IACfS,OAAO,EAAE9B,YAAa;IACtBiC,QAAQ,EAAErD,aAAa,CAACsB,IAAI,KAAK,CAAE;IAAAS,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACpC,2BAEO,CACL,CACL,CAED,CAAC;AAEV,CAAC;AAED,eAAe9C,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}