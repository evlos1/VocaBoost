{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\VocaBoost\\\\src\\\\components\\\\ReadingModule.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Paper, Button, List, ListItem, ListItemText } from '@mui/material';\nimport styled from 'styled-components';\nconst PassageContainer = styled.div`\n  margin: 20px 0;\n  padding: 20px;\n  background-color: #f8f9fa;\n  border-radius: 8px;\n`;\nconst Word = styled.span`\n  cursor: pointer;\n  padding: 2px 4px;\n  border-radius: 4px;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #e3f2fd;\n  }\n\n  &.selected {\n    background-color: #bbdefb;\n    text-decoration: underline;\n  }\n`;\nconst ReadingModule = ({\n  topic,\n  level,\n  onComplete\n}) => {\n  const [passage, setPassage] = useState('');\n  const [selectedWords, setSelectedWords] = useState([]);\n  const [wordMeanings, setWordMeanings] = useState({});\n  useEffect(() => {\n    // 토픽과 레벨에 맞는 글을 가져옵니다\n    const getPassage = async () => {\n      try {\n        const response = await fetch(`/api/passages?topic=${topic.main}&subtopic=${topic.sub}&subsubtopic=${topic.subSub}&level=${level}`);\n        const data = await response.json();\n        setPassage(data.passage);\n        setWordMeanings(data.wordMeanings);\n      } catch (error) {\n        console.error('Error fetching passage:', error);\n        // 임시 데이터를 사용합니다\n        setPassage('This is a sample passage for the selected topic and level. Please select words you do not know.');\n      }\n    };\n    getPassage();\n  }, [topic, level]);\n  const handleWordClick = word => {\n    setSelectedWords(prev => prev.includes(word) ? prev.filter(w => w !== word) : [...prev, word]);\n  };\n  const handleSubmit = () => {\n    onComplete(selectedWords);\n  };\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      p: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"Reading Module\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Topic: \", topic.main, \" > \", topic.sub, \" > \", topic.subSub), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"Level: \", level), /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    sx: {\n      p: 3,\n      mb: 3,\n      maxHeight: '500px',\n      overflow: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    paragraph: true,\n    sx: {\n      wordBreak: 'break-word',\n      whiteSpace: 'pre-wrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, passage.split(' ').map((word, index) => /*#__PURE__*/React.createElement(\"span\", {\n    key: index,\n    onClick: () => handleWordClick(word),\n    style: {\n      cursor: 'pointer',\n      backgroundColor: selectedWords.includes(word) ? '#ffeb3b' : 'transparent',\n      padding: '2px',\n      margin: '1px',\n      borderRadius: '3px',\n      display: 'inline-block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, word)))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSubmit,\n    disabled: selectedWords.length === 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, \"Submit Selected Words\"), selectedWords.length > 0 && /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    sx: {\n      p: 3,\n      mt: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"Selected Words (\", selectedWords.length, \" words, \", (selectedWords.length / passage.split(' ').length * 100).toFixed(1), \"% of total words):\"), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, selectedWords.map((word, index) => /*#__PURE__*/React.createElement(ListItem, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: `${word} - ${wordMeanings[word.toLowerCase()] || '의미 없음'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }))))));\n};\nexport default ReadingModule;","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Paper","Button","List","ListItem","ListItemText","styled","PassageContainer","div","Word","span","ReadingModule","topic","level","onComplete","passage","setPassage","selectedWords","setSelectedWords","wordMeanings","setWordMeanings","getPassage","response","fetch","main","sub","subSub","data","json","error","console","handleWordClick","word","prev","includes","filter","w","handleSubmit","createElement","sx","p","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","elevation","mb","maxHeight","overflow","paragraph","wordBreak","whiteSpace","split","map","index","key","onClick","style","cursor","backgroundColor","padding","margin","borderRadius","display","color","disabled","length","mt","toFixed","primary","toLowerCase"],"sources":["C:/Users/user/VocaBoost/src/components/ReadingModule.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Typography, Paper, Button, List, ListItem, ListItemText } from '@mui/material';\r\nimport styled from 'styled-components';\r\n\r\nconst PassageContainer = styled.div`\r\n  margin: 20px 0;\r\n  padding: 20px;\r\n  background-color: #f8f9fa;\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst Word = styled.span`\r\n  cursor: pointer;\r\n  padding: 2px 4px;\r\n  border-radius: 4px;\r\n  transition: background-color 0.3s ease;\r\n\r\n  &:hover {\r\n    background-color: #e3f2fd;\r\n  }\r\n\r\n  &.selected {\r\n    background-color: #bbdefb;\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nconst ReadingModule = ({ topic, level, onComplete }) => {\r\n  const [passage, setPassage] = useState('');\r\n  const [selectedWords, setSelectedWords] = useState([]);\r\n  const [wordMeanings, setWordMeanings] = useState({});\r\n\r\n  useEffect(() => {\r\n    // 토픽과 레벨에 맞는 글을 가져옵니다\r\n    const getPassage = async () => {\r\n      try {\r\n        const response = await fetch(`/api/passages?topic=${topic.main}&subtopic=${topic.sub}&subsubtopic=${topic.subSub}&level=${level}`);\r\n        const data = await response.json();\r\n        setPassage(data.passage);\r\n        setWordMeanings(data.wordMeanings);\r\n      } catch (error) {\r\n        console.error('Error fetching passage:', error);\r\n        // 임시 데이터를 사용합니다\r\n        setPassage('This is a sample passage for the selected topic and level. Please select words you do not know.');\r\n      }\r\n    };\r\n\r\n    getPassage();\r\n  }, [topic, level]);\r\n\r\n  const handleWordClick = (word) => {\r\n    setSelectedWords(prev => \r\n      prev.includes(word) \r\n        ? prev.filter(w => w !== word)\r\n        : [...prev, word]\r\n    );\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    onComplete(selectedWords);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Reading Module\r\n      </Typography>\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        Topic: {topic.main} &gt; {topic.sub} &gt; {topic.subSub}\r\n      </Typography>\r\n      <Typography variant=\"subtitle2\" gutterBottom>\r\n        Level: {level}\r\n      </Typography>\r\n\r\n      <Paper elevation={3} sx={{ p: 3, mb: 3, maxHeight: '500px', overflow: 'auto' }}>\r\n        <Typography variant=\"body1\" paragraph sx={{ wordBreak: 'break-word', whiteSpace: 'pre-wrap' }}>\r\n          {passage.split(' ').map((word, index) => (\r\n            <span\r\n              key={index}\r\n              onClick={() => handleWordClick(word)}\r\n              style={{\r\n                cursor: 'pointer',\r\n                backgroundColor: selectedWords.includes(word) ? '#ffeb3b' : 'transparent',\r\n                padding: '2px',\r\n                margin: '1px',\r\n                borderRadius: '3px',\r\n                display: 'inline-block'\r\n              }}\r\n            >\r\n              {word}\r\n            </span>\r\n          ))}\r\n        </Typography>\r\n      </Paper>\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleSubmit}\r\n        disabled={selectedWords.length === 0}\r\n      >\r\n        Submit Selected Words\r\n      </Button>\r\n\r\n      {selectedWords.length > 0 && (\r\n        <Paper elevation={3} sx={{ p: 3, mt: 3 }}>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            Selected Words ({selectedWords.length} words, {((selectedWords.length / passage.split(' ').length) * 100).toFixed(1)}% of total words):\r\n          </Typography>\r\n          <List>\r\n            {selectedWords.map((word, index) => (\r\n              <ListItem key={index}>\r\n                <ListItemText \r\n                  primary={`${word} - ${wordMeanings[word.toLowerCase()] || '의미 없음'}`}\r\n                />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Paper>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ReadingModule; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}