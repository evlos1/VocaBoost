{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\VocaBoost\\\\src\\\\components\\\\CEFRLevelTest.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Paper, Button, CircularProgress } from '@mui/material';\nimport styled from 'styled-components';\nconst PassageContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  line-height: 1.6;\n  font-size: 1.1rem;\n`;\nconst Word = styled.span`\n  cursor: pointer;\n  padding: 2px 4px;\n  border-radius: 3px;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: #f0f0f0;\n  }\n\n  &.selected {\n    background-color: #e3f2fd;\n    border-bottom: 2px solid #2196f3;\n  }\n`;\nconst CEFRLevelTest = ({\n  selectedTopic,\n  onLevelDetermined\n}) => {\n  const [currentLevel, setCurrentLevel] = useState('B2'); // CEFR 레벨: A1, A2, B1, B2, C1, C2\n  const [passage, setPassage] = useState('');\n  const [selectedWords, setSelectedWords] = useState(new Set());\n  const [isLoading, setIsLoading] = useState(true);\n  const [wordCount, setWordCount] = useState(0);\n\n  // CEFR 레벨별 샘플 텍스트 (실제로는 API에서 가져와야 함)\n  const samplePassages = {\n    A1: \"This is a simple text. It has easy words. You can read it fast.\",\n    A2: \"The weather is nice today. I like to walk in the park. Many people are there.\",\n    B1: \"Technology has changed our lives in many ways. We use computers every day. They help us work and learn.\",\n    B2: \"The impact of climate change on global ecosystems is becoming increasingly evident. Scientists warn that immediate action is necessary to prevent irreversible damage.\",\n    C1: \"The intricate relationship between economic policies and social welfare has been a subject of extensive debate among scholars and policymakers alike.\",\n    C2: \"The philosophical implications of quantum mechanics challenge our fundamental understanding of reality, necessitating a paradigm shift in our conceptual framework.\"\n  };\n  useEffect(() => {\n    // 실제 구현에서는 API를 통해 선택된 토픽에 맞는 텍스트를 가져와야 함\n    const fetchPassage = async () => {\n      setIsLoading(true);\n      // API 호출 시뮬레이션\n      setTimeout(() => {\n        setPassage(samplePassages[currentLevel]);\n        setWordCount(samplePassages[currentLevel].split(/\\s+/).length);\n        setIsLoading(false);\n      }, 1000);\n    };\n    fetchPassage();\n  }, [currentLevel, selectedTopic]);\n  const handleWordClick = word => {\n    setSelectedWords(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(word)) {\n        newSet.delete(word);\n      } else {\n        newSet.add(word);\n      }\n      return newSet;\n    });\n  };\n  const handleSubmit = () => {\n    const unknownWordPercentage = selectedWords.size / wordCount * 100;\n    if (unknownWordPercentage > 20) {\n      // 더 쉬운 레벨로 이동\n      const levels = ['A1', 'A2', 'B1', 'B2', 'C1', 'C2'];\n      const currentIndex = levels.indexOf(currentLevel);\n      if (currentIndex > 0) {\n        setCurrentLevel(levels[currentIndex - 1]);\n        setSelectedWords(new Set());\n      } else {\n        // A1에서도 20% 이상이면 A1로 결정\n        onLevelDetermined(currentLevel);\n      }\n    } else if (unknownWordPercentage < 10) {\n      // 더 어려운 레벨로 이동\n      const levels = ['A1', 'A2', 'B1', 'B2', 'C1', 'C2'];\n      const currentIndex = levels.indexOf(currentLevel);\n      if (currentIndex < levels.length - 1) {\n        setCurrentLevel(levels[currentIndex + 1]);\n        setSelectedWords(new Set());\n      } else {\n        // C2에서도 10% 미만이면 C2로 결정\n        onLevelDetermined(currentLevel);\n      }\n    } else {\n      // 적정 레벨 찾음\n      onLevelDetermined(currentLevel);\n    }\n  };\n  const renderPassage = () => {\n    if (!passage) return null;\n    return passage.split(/\\s+/).map((word, index) => /*#__PURE__*/React.createElement(Word, {\n      key: index,\n      className: selectedWords.has(word) ? 'selected' : '',\n      onClick: () => handleWordClick(word),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, word, ' '));\n  };\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      maxWidth: 800,\n      mx: 'auto',\n      p: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, \"CEFR \\uB808\\uBCA8 \\uD14C\\uC2A4\\uD2B8\"), /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    sx: {\n      p: 3,\n      mb: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, \"\\uD604\\uC7AC \\uD14C\\uC2A4\\uD2B8 \\uB808\\uBCA8: \", currentLevel), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"text.secondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, \"\\uBAA8\\uB974\\uB294 \\uB2E8\\uC5B4\\uB97C \\uD074\\uB9AD\\uD558\\uC138\\uC694. \\uC804\\uCCB4 \\uB2E8\\uC5B4\\uC758 10-20%\\uAC00 \\uC801\\uC815 \\uC218\\uC900\\uC785\\uB2C8\\uB2E4.\")), isLoading ? /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: 'flex',\n      justifyContent: 'center',\n      my: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PassageContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, renderPassage()), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      mt: 3,\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, \"\\uC120\\uD0DD\\uD55C \\uB2E8\\uC5B4: \", selectedWords.size, \" / \\uC804\\uCCB4 \\uB2E8\\uC5B4: \", wordCount), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, \"\\uB2E4\\uC74C\"))));\n};\nexport default CEFRLevelTest;","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Paper","Button","CircularProgress","styled","PassageContainer","div","Word","span","CEFRLevelTest","selectedTopic","onLevelDetermined","currentLevel","setCurrentLevel","passage","setPassage","selectedWords","setSelectedWords","Set","isLoading","setIsLoading","wordCount","setWordCount","samplePassages","A1","A2","B1","B2","C1","C2","fetchPassage","setTimeout","split","length","handleWordClick","word","prev","newSet","has","delete","add","handleSubmit","unknownWordPercentage","size","levels","currentIndex","indexOf","renderPassage","map","index","createElement","key","className","onClick","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","sx","maxWidth","mx","p","variant","gutterBottom","elevation","mb","color","display","justifyContent","my","Fragment","mt","alignItems"],"sources":["C:/Users/user/VocaBoost/src/components/CEFRLevelTest.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Typography, Paper, Button, CircularProgress } from '@mui/material';\r\nimport styled from 'styled-components';\r\n\r\nconst PassageContainer = styled.div`\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  line-height: 1.6;\r\n  font-size: 1.1rem;\r\n`;\r\n\r\nconst Word = styled.span`\r\n  cursor: pointer;\r\n  padding: 2px 4px;\r\n  border-radius: 3px;\r\n  transition: background-color 0.2s;\r\n\r\n  &:hover {\r\n    background-color: #f0f0f0;\r\n  }\r\n\r\n  &.selected {\r\n    background-color: #e3f2fd;\r\n    border-bottom: 2px solid #2196f3;\r\n  }\r\n`;\r\n\r\nconst CEFRLevelTest = ({ selectedTopic, onLevelDetermined }) => {\r\n  const [currentLevel, setCurrentLevel] = useState('B2'); // CEFR 레벨: A1, A2, B1, B2, C1, C2\r\n  const [passage, setPassage] = useState('');\r\n  const [selectedWords, setSelectedWords] = useState(new Set());\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [wordCount, setWordCount] = useState(0);\r\n\r\n  // CEFR 레벨별 샘플 텍스트 (실제로는 API에서 가져와야 함)\r\n  const samplePassages = {\r\n    A1: \"This is a simple text. It has easy words. You can read it fast.\",\r\n    A2: \"The weather is nice today. I like to walk in the park. Many people are there.\",\r\n    B1: \"Technology has changed our lives in many ways. We use computers every day. They help us work and learn.\",\r\n    B2: \"The impact of climate change on global ecosystems is becoming increasingly evident. Scientists warn that immediate action is necessary to prevent irreversible damage.\",\r\n    C1: \"The intricate relationship between economic policies and social welfare has been a subject of extensive debate among scholars and policymakers alike.\",\r\n    C2: \"The philosophical implications of quantum mechanics challenge our fundamental understanding of reality, necessitating a paradigm shift in our conceptual framework.\"\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 실제 구현에서는 API를 통해 선택된 토픽에 맞는 텍스트를 가져와야 함\r\n    const fetchPassage = async () => {\r\n      setIsLoading(true);\r\n      // API 호출 시뮬레이션\r\n      setTimeout(() => {\r\n        setPassage(samplePassages[currentLevel]);\r\n        setWordCount(samplePassages[currentLevel].split(/\\s+/).length);\r\n        setIsLoading(false);\r\n      }, 1000);\r\n    };\r\n\r\n    fetchPassage();\r\n  }, [currentLevel, selectedTopic]);\r\n\r\n  const handleWordClick = (word) => {\r\n    setSelectedWords(prev => {\r\n      const newSet = new Set(prev);\r\n      if (newSet.has(word)) {\r\n        newSet.delete(word);\r\n      } else {\r\n        newSet.add(word);\r\n      }\r\n      return newSet;\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const unknownWordPercentage = (selectedWords.size / wordCount) * 100;\r\n    \r\n    if (unknownWordPercentage > 20) {\r\n      // 더 쉬운 레벨로 이동\r\n      const levels = ['A1', 'A2', 'B1', 'B2', 'C1', 'C2'];\r\n      const currentIndex = levels.indexOf(currentLevel);\r\n      if (currentIndex > 0) {\r\n        setCurrentLevel(levels[currentIndex - 1]);\r\n        setSelectedWords(new Set());\r\n      } else {\r\n        // A1에서도 20% 이상이면 A1로 결정\r\n        onLevelDetermined(currentLevel);\r\n      }\r\n    } else if (unknownWordPercentage < 10) {\r\n      // 더 어려운 레벨로 이동\r\n      const levels = ['A1', 'A2', 'B1', 'B2', 'C1', 'C2'];\r\n      const currentIndex = levels.indexOf(currentLevel);\r\n      if (currentIndex < levels.length - 1) {\r\n        setCurrentLevel(levels[currentIndex + 1]);\r\n        setSelectedWords(new Set());\r\n      } else {\r\n        // C2에서도 10% 미만이면 C2로 결정\r\n        onLevelDetermined(currentLevel);\r\n      }\r\n    } else {\r\n      // 적정 레벨 찾음\r\n      onLevelDetermined(currentLevel);\r\n    }\r\n  };\r\n\r\n  const renderPassage = () => {\r\n    if (!passage) return null;\r\n\r\n    return passage.split(/\\s+/).map((word, index) => (\r\n      <Word\r\n        key={index}\r\n        className={selectedWords.has(word) ? 'selected' : ''}\r\n        onClick={() => handleWordClick(word)}\r\n      >\r\n        {word}{' '}\r\n      </Word>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 800, mx: 'auto', p: 3 }}>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        CEFR 레벨 테스트\r\n      </Typography>\r\n\r\n      <Paper elevation={3} sx={{ p: 3, mb: 3 }}>\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          현재 테스트 레벨: {currentLevel}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n          모르는 단어를 클릭하세요. 전체 단어의 10-20%가 적정 수준입니다.\r\n        </Typography>\r\n      </Paper>\r\n\r\n      {isLoading ? (\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', my: 4 }}>\r\n          <CircularProgress />\r\n        </Box>\r\n      ) : (\r\n        <>\r\n          <PassageContainer>\r\n            {renderPassage()}\r\n          </PassageContainer>\r\n\r\n          <Box sx={{ mt: 3, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n            <Typography variant=\"body2\">\r\n              선택한 단어: {selectedWords.size} / 전체 단어: {wordCount}\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleSubmit}\r\n            >\r\n              다음\r\n            </Button>\r\n          </Box>\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CEFRLevelTest; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}