{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\VocaBoost\\\\src\\\\components\\\\VocabularyModule.js\";\nimport React, { useState } from 'react';\nimport { Box, Typography, Paper, Button, List, ListItem, ListItemText, TextField } from '@mui/material';\nconst VocabularyModule = ({\n  words,\n  onComplete\n}) => {\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [userInput, setUserInput] = useState('');\n  const [correctCount, setCorrectCount] = useState(0);\n  const handleInputChange = event => {\n    setUserInput(event.target.value);\n  };\n  const handleCheck = () => {\n    if (userInput.trim().toLowerCase() === words[currentWordIndex].toLowerCase()) {\n      setCorrectCount(correctCount + 1);\n    }\n    if (currentWordIndex < words.length - 1) {\n      setCurrentWordIndex(currentWordIndex + 1);\n      setUserInput('');\n    } else {\n      onComplete();\n    }\n  };\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      maxWidth: 800,\n      mx: 'auto',\n      p: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Vocabulary Practice\"), /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    sx: {\n      p: 3,\n      mb: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Word \", currentWordIndex + 1, \" of \", words.length), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      mt: 2,\n      display: 'flex',\n      gap: 2,\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Type the word\",\n    value: userInput,\n    onChange: handleInputChange,\n    onKeyPress: e => {\n      if (e.key === 'Enter') {\n        handleCheck();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleCheck,\n    disabled: !userInput.trim(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Check\")), /*#__PURE__*/React.createElement(List, {\n    sx: {\n      mt: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, words.map((word, index) => /*#__PURE__*/React.createElement(ListItem, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: word,\n    secondary: index < currentWordIndex ? \"Completed\" : \"Pending\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"text.secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"Correct: \", correctCount, \" / \", words.length));\n};\nexport default VocabularyModule;","map":{"version":3,"names":["React","useState","Box","Typography","Paper","Button","List","ListItem","ListItemText","TextField","VocabularyModule","words","onComplete","currentWordIndex","setCurrentWordIndex","userInput","setUserInput","correctCount","setCorrectCount","handleInputChange","event","target","value","handleCheck","trim","toLowerCase","length","createElement","sx","maxWidth","mx","p","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","elevation","mb","mt","display","gap","alignItems","fullWidth","label","onChange","onKeyPress","e","key","color","onClick","disabled","map","word","index","primary","secondary"],"sources":["C:/Users/user/VocaBoost/src/components/VocabularyModule.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Box, Typography, Paper, Button, List, ListItem, ListItemText, TextField } from '@mui/material';\r\n\r\nconst VocabularyModule = ({ words, onComplete }) => {\r\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\r\n  const [userInput, setUserInput] = useState('');\r\n  const [correctCount, setCorrectCount] = useState(0);\r\n\r\n  const handleInputChange = (event) => {\r\n    setUserInput(event.target.value);\r\n  };\r\n\r\n  const handleCheck = () => {\r\n    if (userInput.trim().toLowerCase() === words[currentWordIndex].toLowerCase()) {\r\n      setCorrectCount(correctCount + 1);\r\n    }\r\n\r\n    if (currentWordIndex < words.length - 1) {\r\n      setCurrentWordIndex(currentWordIndex + 1);\r\n      setUserInput('');\r\n    } else {\r\n      onComplete();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 800, mx: 'auto', p: 3 }}>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Vocabulary Practice\r\n      </Typography>\r\n\r\n      <Paper elevation={3} sx={{ p: 3, mb: 3 }}>\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          Word {currentWordIndex + 1} of {words.length}\r\n        </Typography>\r\n\r\n        <Box sx={{ mt: 2, display: 'flex', gap: 2, alignItems: 'center' }}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Type the word\"\r\n            value={userInput}\r\n            onChange={handleInputChange}\r\n            onKeyPress={(e) => {\r\n              if (e.key === 'Enter') {\r\n                handleCheck();\r\n              }\r\n            }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleCheck}\r\n            disabled={!userInput.trim()}\r\n          >\r\n            Check\r\n          </Button>\r\n        </Box>\r\n\r\n        <List sx={{ mt: 2 }}>\r\n          {words.map((word, index) => (\r\n            <ListItem key={index}>\r\n              <ListItemText\r\n                primary={word}\r\n                secondary={index < currentWordIndex ? \"Completed\" : \"Pending\"}\r\n              />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Paper>\r\n\r\n      <Typography variant=\"body2\" color=\"text.secondary\">\r\n        Correct: {correctCount} / {words.length}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default VocabularyModule; "],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,GAAG,EAAEC,UAAU,EAAEC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,SAAS,QAAQ,eAAe;AAEvG,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAW,CAAC,KAAK;EAClD,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EAEnD,MAAMkB,iBAAiB,GAAIC,KAAK,IAAK;IACnCJ,YAAY,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIR,SAAS,CAACS,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,KAAKd,KAAK,CAACE,gBAAgB,CAAC,CAACY,WAAW,CAAC,CAAC,EAAE;MAC5EP,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;IACnC;IAEA,IAAIJ,gBAAgB,GAAGF,KAAK,CAACe,MAAM,GAAG,CAAC,EAAE;MACvCZ,mBAAmB,CAACD,gBAAgB,GAAG,CAAC,CAAC;MACzCG,YAAY,CAAC,EAAE,CAAC;IAClB,CAAC,MAAM;MACLJ,UAAU,CAAC,CAAC;IACd;EACF,CAAC;EAED,oBACEZ,KAAA,CAAA2B,aAAA,CAACzB,GAAG;IAAC0B,EAAE,EAAE;MAAEC,QAAQ,EAAE,GAAG;MAAEC,EAAE,EAAE,MAAM;MAAEC,CAAC,EAAE;IAAE,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3CrC,KAAA,CAAA2B,aAAA,CAACxB,UAAU;IAACmC,OAAO,EAAC,IAAI;IAACC,YAAY;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,qBAE1B,CAAC,eAEbrC,KAAA,CAAA2B,aAAA,CAACvB,KAAK;IAACoC,SAAS,EAAE,CAAE;IAACZ,EAAE,EAAE;MAAEG,CAAC,EAAE,CAAC;MAAEU,EAAE,EAAE;IAAE,CAAE;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvCrC,KAAA,CAAA2B,aAAA,CAACxB,UAAU;IAACmC,OAAO,EAAC,WAAW;IAACC,YAAY;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,OACtC,EAACxB,gBAAgB,GAAG,CAAC,EAAC,MAAI,EAACF,KAAK,CAACe,MAC5B,CAAC,eAEb1B,KAAA,CAAA2B,aAAA,CAACzB,GAAG;IAAC0B,EAAE,EAAE;MAAEc,EAAE,EAAE,CAAC;MAAEC,OAAO,EAAE,MAAM;MAAEC,GAAG,EAAE,CAAC;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChErC,KAAA,CAAA2B,aAAA,CAAClB,SAAS;IACRqC,SAAS;IACTC,KAAK,EAAC,eAAe;IACrBzB,KAAK,EAAEP,SAAU;IACjBiC,QAAQ,EAAE7B,iBAAkB;IAC5B8B,UAAU,EAAGC,CAAC,IAAK;MACjB,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;QACrB5B,WAAW,CAAC,CAAC;MACf;IACF,CAAE;IAAAS,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACH,CAAC,eACFrC,KAAA,CAAA2B,aAAA,CAACtB,MAAM;IACLiC,OAAO,EAAC,WAAW;IACnBc,KAAK,EAAC,SAAS;IACfC,OAAO,EAAE9B,WAAY;IACrB+B,QAAQ,EAAE,CAACvC,SAAS,CAACS,IAAI,CAAC,CAAE;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC7B,OAEO,CACL,CAAC,eAENrC,KAAA,CAAA2B,aAAA,CAACrB,IAAI;IAACsB,EAAE,EAAE;MAAEc,EAAE,EAAE;IAAE,CAAE;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACjB1B,KAAK,CAAC4C,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBzD,KAAA,CAAA2B,aAAA,CAACpB,QAAQ;IAAC4C,GAAG,EAAEM,KAAM;IAAAzB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnBrC,KAAA,CAAA2B,aAAA,CAACnB,YAAY;IACXkD,OAAO,EAAEF,IAAK;IACdG,SAAS,EAAEF,KAAK,GAAG5C,gBAAgB,GAAG,WAAW,GAAG,SAAU;IAAAmB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC/D,CACO,CACX,CACG,CACD,CAAC,eAERrC,KAAA,CAAA2B,aAAA,CAACxB,UAAU;IAACmC,OAAO,EAAC,OAAO;IAACc,KAAK,EAAC,gBAAgB;IAAApB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,WACxC,EAACpB,YAAY,EAAC,KAAG,EAACN,KAAK,CAACe,MACvB,CACT,CAAC;AAEV,CAAC;AAED,eAAehB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module"}