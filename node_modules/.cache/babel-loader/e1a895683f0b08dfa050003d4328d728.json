{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\VocaBoost\\\\src\\\\components\\\\QuizModule.js\";\nimport React, { useState } from 'react';\nimport { Box, Typography, Paper, Button, Radio, RadioGroup, FormControlLabel, FormControl } from '@mui/material';\nconst QuizModule = ({\n  topic,\n  level,\n  words,\n  onComplete\n}) => {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n\n  // 샘플 퀴즈 데이터 (실제로는 API에서 가져와야 함)\n  const questions = [{\n    question: \"What is the main topic of the passage?\",\n    options: [\"The history of baseball\", \"The rules of baseball\", \"The importance of baseball\", \"The future of baseball\"],\n    correctAnswer: \"The importance of baseball\"\n  }, {\n    question: \"What skills do baseball players need?\",\n    options: [\"Only physical strength\", \"Only mental strategy\", \"Both physical and mental skills\", \"No special skills required\"],\n    correctAnswer: \"Both physical and mental skills\"\n  }];\n  const handleAnswerSelect = event => {\n    setSelectedAnswer(event.target.value);\n  };\n  const handleNext = () => {\n    if (selectedAnswer === questions[currentQuestion].correctAnswer) {\n      setScore(score + 1);\n    }\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n      setSelectedAnswer('');\n    } else {\n      onComplete();\n    }\n  };\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      maxWidth: 800,\n      mx: 'auto',\n      p: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Comprehension Quiz\"), /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    sx: {\n      p: 3,\n      mb: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Question \", currentQuestion + 1, \" of \", questions.length), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, questions[currentQuestion].question), /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    sx: {\n      mt: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RadioGroup, {\n    value: selectedAnswer,\n    onChange: handleAnswerSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, questions[currentQuestion].options.map((option, index) => /*#__PURE__*/React.createElement(FormControlLabel, {\n    key: index,\n    value: option,\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 26\n      }\n    }),\n    label: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      mt: 3,\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleNext,\n    disabled: !selectedAnswer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, currentQuestion < questions.length - 1 ? 'Next Question' : 'Finish Quiz'))), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"text.secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"Score: \", score, \" / \", questions.length));\n};\nexport default QuizModule;","map":{"version":3,"names":["React","useState","Box","Typography","Paper","Button","Radio","RadioGroup","FormControlLabel","FormControl","QuizModule","topic","level","words","onComplete","currentQuestion","setCurrentQuestion","score","setScore","selectedAnswer","setSelectedAnswer","questions","question","options","correctAnswer","handleAnswerSelect","event","target","value","handleNext","length","createElement","sx","maxWidth","mx","p","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","elevation","mb","component","mt","onChange","map","option","index","key","control","label","display","justifyContent","color","onClick","disabled"],"sources":["C:/Users/user/VocaBoost/src/components/QuizModule.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Box, Typography, Paper, Button, Radio, RadioGroup, FormControlLabel, FormControl } from '@mui/material';\r\n\r\nconst QuizModule = ({ topic, level, words, onComplete }) => {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState('');\r\n\r\n  // 샘플 퀴즈 데이터 (실제로는 API에서 가져와야 함)\r\n  const questions = [\r\n    {\r\n      question: \"What is the main topic of the passage?\",\r\n      options: [\r\n        \"The history of baseball\",\r\n        \"The rules of baseball\",\r\n        \"The importance of baseball\",\r\n        \"The future of baseball\"\r\n      ],\r\n      correctAnswer: \"The importance of baseball\"\r\n    },\r\n    {\r\n      question: \"What skills do baseball players need?\",\r\n      options: [\r\n        \"Only physical strength\",\r\n        \"Only mental strategy\",\r\n        \"Both physical and mental skills\",\r\n        \"No special skills required\"\r\n      ],\r\n      correctAnswer: \"Both physical and mental skills\"\r\n    }\r\n  ];\r\n\r\n  const handleAnswerSelect = (event) => {\r\n    setSelectedAnswer(event.target.value);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (selectedAnswer === questions[currentQuestion].correctAnswer) {\r\n      setScore(score + 1);\r\n    }\r\n\r\n    if (currentQuestion < questions.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n      setSelectedAnswer('');\r\n    } else {\r\n      onComplete();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 800, mx: 'auto', p: 3 }}>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Comprehension Quiz\r\n      </Typography>\r\n\r\n      <Paper elevation={3} sx={{ p: 3, mb: 3 }}>\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          Question {currentQuestion + 1} of {questions.length}\r\n        </Typography>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          {questions[currentQuestion].question}\r\n        </Typography>\r\n\r\n        <FormControl component=\"fieldset\" sx={{ mt: 2 }}>\r\n          <RadioGroup value={selectedAnswer} onChange={handleAnswerSelect}>\r\n            {questions[currentQuestion].options.map((option, index) => (\r\n              <FormControlLabel\r\n                key={index}\r\n                value={option}\r\n                control={<Radio />}\r\n                label={option}\r\n              />\r\n            ))}\r\n          </RadioGroup>\r\n        </FormControl>\r\n\r\n        <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleNext}\r\n            disabled={!selectedAnswer}\r\n          >\r\n            {currentQuestion < questions.length - 1 ? 'Next Question' : 'Finish Quiz'}\r\n          </Button>\r\n        </Box>\r\n      </Paper>\r\n\r\n      <Typography variant=\"body2\" color=\"text.secondary\">\r\n        Score: {score} / {questions.length}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default QuizModule; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}